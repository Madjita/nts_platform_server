// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nts_platform_server.Data;

namespace nts_platform_server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220818061358_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("nts_platform_server.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("nts_platform_server.Entities.ContactProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ContactProject");
                });

            modelBuilder.Entity("nts_platform_server.Entities.DocHour", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityCodeTravel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectNumber")
                        .HasColumnType("int");

                    b.Property<float>("TravelTimeC")
                        .HasColumnType("real");

                    b.Property<float>("TraverTimeG")
                        .HasColumnType("real");

                    b.Property<float>("WTHour")
                        .HasColumnType("real");

                    b.Property<long?>("WeekId")
                        .HasColumnType("bigint");

                    b.Property<string>("Weekday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WeekId");

                    b.ToTable("DocHour");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Profile", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("INN")
                        .HasColumnType("int");

                    b.Property<int>("IPcode")
                        .HasColumnType("int");

                    b.Property<DateTime>("IPdateback")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IPdatetaked")
                        .HasColumnType("datetime2");

                    b.Property<int>("IPnumber")
                        .HasColumnType("int");

                    b.Property<string>("IPplaceborned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPtaked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRFcode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PRFdateback")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PRFdatetaked")
                        .HasColumnType("datetime2");

                    b.Property<int>("PRFnumber")
                        .HasColumnType("int");

                    b.Property<string>("PRFplaceborned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRFplacelived")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRFplaceregistration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRFseries")
                        .HasColumnType("int");

                    b.Property<string>("PRFtaked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PhotoByte")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Snils")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ULMcode")
                        .HasColumnType("int");

                    b.Property<DateTime>("ULMdateback")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ULMdatetaked")
                        .HasColumnType("datetime2");

                    b.Property<int>("ULMnumber")
                        .HasColumnType("int");

                    b.Property<string>("ULMplaceborned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ULMtaked")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualHour")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EnginerCreaterId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxHour")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("indexAdd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnginerCreaterId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("nts_platform_server.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("nts_platform_server.Entities.UserProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProject");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Week", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("FrHourId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MoHourId")
                        .HasColumnType("bigint");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("NumberWeek")
                        .HasColumnType("int");

                    b.Property<long?>("SaHourId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SuHourId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ThHourId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TuHourId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WeHourId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrHourId");

                    b.HasIndex("MoHourId");

                    b.HasIndex("SaHourId");

                    b.HasIndex("SuHourId");

                    b.HasIndex("ThHourId");

                    b.HasIndex("TuHourId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserProjectId");

                    b.HasIndex("WeHourId");

                    b.ToTable("Week");
                });

            modelBuilder.Entity("nts_platform_server.Entities.ContactProject", b =>
                {
                    b.HasOne("nts_platform_server.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("nts_platform_server.Entities.Project", "Project")
                        .WithMany("ContactProjects")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Contact");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("nts_platform_server.Entities.DocHour", b =>
                {
                    b.HasOne("nts_platform_server.Entities.Week", "Week")
                        .WithMany()
                        .HasForeignKey("WeekId");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Profile", b =>
                {
                    b.HasOne("nts_platform_server.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("nts_platform_server.Entities.Profile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Project", b =>
                {
                    b.HasOne("nts_platform_server.Entities.User", "EnginerCreater")
                        .WithMany()
                        .HasForeignKey("EnginerCreaterId");

                    b.Navigation("EnginerCreater");
                });

            modelBuilder.Entity("nts_platform_server.Entities.User", b =>
                {
                    b.HasOne("nts_platform_server.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("nts_platform_server.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Company");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("nts_platform_server.Entities.UserProject", b =>
                {
                    b.HasOne("nts_platform_server.Entities.Project", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectId");

                    b.HasOne("nts_platform_server.Entities.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Week", b =>
                {
                    b.HasOne("nts_platform_server.Entities.DocHour", "FrHour")
                        .WithMany()
                        .HasForeignKey("FrHourId");

                    b.HasOne("nts_platform_server.Entities.DocHour", "MoHour")
                        .WithMany()
                        .HasForeignKey("MoHourId");

                    b.HasOne("nts_platform_server.Entities.DocHour", "SaHour")
                        .WithMany()
                        .HasForeignKey("SaHourId");

                    b.HasOne("nts_platform_server.Entities.DocHour", "SuHour")
                        .WithMany()
                        .HasForeignKey("SuHourId");

                    b.HasOne("nts_platform_server.Entities.DocHour", "ThHour")
                        .WithMany()
                        .HasForeignKey("ThHourId");

                    b.HasOne("nts_platform_server.Entities.DocHour", "TuHour")
                        .WithMany()
                        .HasForeignKey("TuHourId");

                    b.HasOne("nts_platform_server.Entities.User", "User")
                        .WithMany("Weeks")
                        .HasForeignKey("UserId");

                    b.HasOne("nts_platform_server.Entities.UserProject", "UserProject")
                        .WithMany("Weeks")
                        .HasForeignKey("UserProjectId");

                    b.HasOne("nts_platform_server.Entities.DocHour", "WeHour")
                        .WithMany()
                        .HasForeignKey("WeHourId");

                    b.Navigation("FrHour");

                    b.Navigation("MoHour");

                    b.Navigation("SaHour");

                    b.Navigation("SuHour");

                    b.Navigation("ThHour");

                    b.Navigation("TuHour");

                    b.Navigation("User");

                    b.Navigation("UserProject");

                    b.Navigation("WeHour");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Project", b =>
                {
                    b.Navigation("ContactProjects");

                    b.Navigation("UserProjects");
                });

            modelBuilder.Entity("nts_platform_server.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("nts_platform_server.Entities.User", b =>
                {
                    b.Navigation("Profile");

                    b.Navigation("UserProjects");

                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("nts_platform_server.Entities.UserProject", b =>
                {
                    b.Navigation("Weeks");
                });
#pragma warning restore 612, 618
        }
    }
}
